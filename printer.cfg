[include mainsail.cfg]
[include config_backup.cfg]
[include led_effects.cfg]
[include bedfan.cfg]
[include nozzlewiper.cfg]
[include v0_display.cfg]

[exclude_object]

[mcu]
serial: /dev/ttyS0
restart_method: command

[mcu exp]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_17002B00115330374E333320-if00
restart_method: command

[mcu nhk]
serial: /dev/serial/by-id/usb-Klipper_rp2040_4E363334320E547C-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 320
max_accel: 8000            ## from Shake&Tune -> 18950
max_z_velocity: 20
max_z_accel: 300
square_corner_velocity: 6.0

[temperature_sensor SKR_Pico]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor BTT Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor NH36]
sensor_type: temperature_mcu
sensor_mcu: nhk
min_temp: 0
max_temp: 100

#####################################################################
#      Temperature sensors
#####################################################################
[temperature_sensor chamber]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: exp:PA6
gcode_id: T3

#####################################################################
#      X/Y Stepper Settings
#####################################################################

#################### X ####################
[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
position_min: -2
homing_speed: 60
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
uart_address: 0
interpolate: True
run_current: 0.90
#sense_resistor: 0.110
#stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#driver_SGTHRS: 55

[autotune_tmc stepper_x]
motor: moons-ms14hs5p4150
tuning_goal: performance
sg4_thrs: 105

#################### Y ####################
[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
position_min: 0
homing_speed: 60
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
uart_address: 2
interpolate: True
run_current: 0.90
#sense_resistor: 0.110
#stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#driver_SGTHRS: 55

[autotune_tmc stepper_y]
motor: moons-ms14hs5p4150
tuning_goal: performance
sg4_thrs: 115

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 122
position_min: -5
homing_speed: 15
second_homing_speed: 5.0
homing_retract_dist: 4.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: True
run_current: 0.40
#sense_resistor: 0.110
#stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[autotune_tmc stepper_z]
motor: moons-le174s-t0808-200-ar3-s-065
tuning_goal: silent

#####################################################################
#   Extruder
#####################################################################

[tmc2209 extruder]
sense_resistor: 0.100
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false


[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24                                                   # Add ! if moving opposite direction
enable_pin: !nhk:gpio25
pullup_resistor: 2200
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.4523                                          # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: nhk:gpio9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950                                        # !!!! For DragonHF / TZ-V6-2.0 !!!!
#sensor_type: PT1000                                             # My moded DragonHF
sensor_pin: nhk:gpio29
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 30
pressure_advance: 0.03
pressure_advance_smooth_time: 0.04

[tmc2209 extruder]
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
#uart_address: 3
interpolate: False
run_current: 0.57
sense_resistor: 0.100
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder


#####################################################################
#   Probe
#####################################################################

[probe] ## Other parameters in config.cfg
pin: !nhk:gpio10
x_offset: 0.0
y_offset: 0.0
z_offset: 0.0
speed: 15 #   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
sample_retract_dist: 4.0
samples_tolerance_retries: 2
lift_speed: 10
activate_gcode:
    G4 P200 ;Wait 200ms
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.1
deactivate_gcode:
    {% set run_current = printer.configfile.config['tmc2209 stepper_z'].run_current | float %}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={run_current}

#####################################################################
#   Bed Mesh
#####################################################################
[bed_mesh]
speed: 300
horizontal_move_z: 4.0
mesh_min: 8, 8
mesh_max: 112, 112
probe_count: 4, 4
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
adaptive_margin: 5

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################


[heater_fan hotend_fan]
pin: nhk:gpio5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan] # Part cooling fan
pin: nhk:gpio6
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[fan_generic MFNano]
pin: exp:PA0
max_power: 1.0
off_below: 0.2

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=MFNano SPEED=0

[gcode_macro TOGGLE_MFNano]
gcode:
    {% if printer['fan_generic MFNano'].speed > 0 %}
      SET_FAN_SPEED FAN=MFNano SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=MFNano SPEED=1
    {% endif %}

[temperature_fan BTT_Pi_maximum]
pin: gpio20                                                       # the fan control pin (must be a mosfet or a pwm fan)
# control: watermark                                              # the type of hysteresis we are using
# max_delta: 3.0                                                  # fan turns on/off at 3° over/under target_temp
sensor_type: temperature_combined                                 # new temperature type
sensor_list: temperature_sensor BTT Pi
combination_method: max                                           # use the maximum reading of the sensors
maximum_deviation: 999.9                                          # we don't care about the difference in temperature
max_temp: 80                                                      # just the valid temperature ranges
min_temp: 0
target_temp: 50.0                                                 # the initial target temperature for the fan
max_speed: 1.0
min_speed: 0.0
off_below: 0.15

control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[temperature_fan SKR_Pico_maximum]
pin: exp:PA2                                                      # the fan control pin (must be a mosfet or a pwm fan)
# control: watermark                                              # the type of hysteresis we are using
# max_delta: 3.0                                                  # fan turns on/off at 3° over/under target_temp
sensor_type: temperature_combined                                 # new temperature type
sensor_list: temperature_sensor SKR_Pico
combination_method: max                                           # use the maximum reading of the sensors
maximum_deviation: 999.9                                          # we don't care about the difference in temperature
max_temp: 80                                                      # just the valid temperature ranges
min_temp: 0
target_temp: 50.0                                                 # the initial target temperature for the fan
max_speed: 1.0
min_speed: 0.0
off_below: 0.15

control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor Filament_Runout_Sensor]
pause_on_runout: True
runout_gcode: PAUSE
switch_pin: !gpio16

#####################################################################
#   Z-Axis bottom out protection
#####################################################################

[gcode_button z_bootom_out]
pin: ^gpio25
press_gcode:
    {action_emergency_stop()}

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
  status_homing
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}
  status_ready


[screws_tilt_adjust]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio27
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20  # an example


#####################################################################
# Input shaper
#####################################################################
[input_shaper]
shaper_freq_x: 79.8
shaper_type_x: mzv
shaper_freq_y: 72.0
shaper_type_y: ei
damping_ratio_x: 0.057
damping_ratio_y: 0.164

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.


#####################################################################
# Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode: 
    # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("35")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}


    M117 Homing ...
    G28                                                 # Full home (XYZ)
    status_meshing
    M117 Meshing ...
    BED_MESH_CALIBRATE ADAPTIVE=1
    G90                                                 # Absolute position
    G1 Z10 F4000                                        # Move nozzle away from bed
  
    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
    {% if params.BED|int > 90 %}
      M106 S128                                         # Turn on the extruder fan
      G1 X{x_wait} Y{y_wait} F9000                  # Go to center of the bed
      status_heating_bed
      M117 Bed and heatsoak ...
      M190 S{target_bed}                                # Set target temp for the bed
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for chamber temp
  
    # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp
    {% else %}
      G1 X{x_wait} Y{y_wait} F9000                  # Go to center of the bed
      status_heating_bed
      M117 Heating bed ...
      M190 S{target_bed}                                # Set target temp for the bed
    {% endif %}
  
    M107                                                # Turn off partcooling fan
 
    # Move to poopies position
    M117 Heating HE ...
    G1 X115 Y20 Z5 F6000.0        
    status_heating_hotend
    M109 S{target_extruder}
    POOP
    M117                                                # Clear display
    status_printing                                     # LED effect

[delayed_gcode enter_cooldown]
gcode:
  status_cooling

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    status_part_ready              ; led effect
    G1 E-8.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    {% if printer.toolhead.position.z > (max_z - 15) %}
        {% set z_park = max_z - 2 %}
    {% else %}
        {% set z_park = printer.toolhead.position.z + 15 %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-20} F3600       ; park nozzle at rear
    G0 Z{z_park} F3600             ; park bed at bottom

    M18                            ; disable steppers 
    UPDATE_DELAYED_GCODE ID=enter_cooldown DURATION=10

  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F400                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   G1 E-15 F1000                  ; retract a bit
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    status_heating_hotend
    M117 Pre-heating HE ...
    M109 S130                                           # Heat hotend to cleaning temp
    NW_CLEAN_NOZZLE                                     # Priming
    # Home
    status_homing                                       # Leds
    G1 X60 Y60 F5000.0                                  # Go to the center of the bed

    G4 P200 ;Wait 200ms
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.1       # Reduce current while probing
    G28 Z
    {% set run_current = printer.configfile.config['tmc2209 stepper_z'].run_current | float %} # Restore initial curent
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={run_current}
    G1 Z10

[gcode_macro POOP]
gcode:
    M117 Poopies!
    status_cleaning                ; LED effect
    G90                            ; absolute positioning    
    G1 X105 Y20 Z0.3 F5000.0        ; Move to start position
    M106 S100                      ; fan 20%
    G1 X105 Y20 Z9 E50 F30          ; extrude while lifting
    G1 X105 Y20 Z9
    M106 S255                      ; fan 100%
    G4 P7000                      ; wait 7s
    M106 S0                        ; fan 0%
    M117 Flushing... 
    G1 X105 Y20 Z15 F6000
    G1 X60 Y20 Z9 F6000
    G1 Z0.2
    G1 X105 Y20 Z0.2 F14000
    G1 X105 Y20 Z10 F6000

[gcode_macro Z_CALIBRATE]
gcode:
  status_calibrating_z     ; LED effect
  M117 Z calibrate
  Z_ENDSTOP_CALIBRATE
  
[gcode_macro SCREWS_ADJUST]
gcode:
  status_calibrating_z
  M117 Screws adjust
  BED_SCREWS_ADJUST

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 118.601
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.985
#*# pid_ki = 2.469
#*# pid_kd = 364.411
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.741
#*# pid_ki = 6.377
#*# pid_kd = 30.169
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.075625, 0.069375, 0.024375, -0.015000, -0.149375
#*# 	  0.059375, 0.031250, 0.001875, -0.032500, -0.036875
#*# 	  0.020625, -0.009375, 0.002500, -0.061250, -0.041250
#*# 	  0.020000, -0.028750, -0.038750, -0.049375, -0.035625
#*# 	  0.056250, -0.029375, -0.040000, -0.061250, -0.012500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 115.0
#*# min_y = 5.0
#*# max_y = 115.0
